package com.lmu.trackingapp.models

	index
	description
	event
	eventName
	id
	timestamp
	timezoneOffset
	name
	packageName
	studyID
	correct_timestamp
	weekday
	dataKey
	infoText
	interaction
	priority
	subText
	mobile_BYTES_RECEIVED
	mobile_BYTES_TRANSMITTED
	wifi_BYTES_RECEIVED
	wifi_BYTES_TRANSMITTED
	category
	session_id


"23-03-2022 17:40:08,775 USAGE_EVENTS": {
		"description": "Android system",
		"event": "SCREEN_NON_INTERACTIVE",
		"eventName": "USAGE_EVENTS",
		"id": "1648053628075_393cc87d-21c0-4d6b-8447-a437ce721051",
		"packageName": "android",
		"metaData" : "",
		"timestamp": 1648053608775,
		"timezoneOffset": 3600000
	},

"23-03-2022 18:19:59,120 NOTIFICATION ": {
 	"description ": " - 2119633786 ",
 	"event ": "1582296304 ",
 	"eventName ": "NOTIFICATION ",
 	"id ": "",
 	"metaData ": {
 		"category ": "msg ",
 		"dataKey ": "NOTIFICATION_META ",
 		"infoText ": "",
 		"interaction ": "NOTIFICATION_REMOVED ",
 		"priority ": 0,
 		"subText ": ""
 	},
 	"packageName ": "org.telegram.messenger ",
 	"timestamp ": 1648055999120,
 	"timezoneOffset ": 3600000
 },


 weekday:
 0: Monday


enum class LogEventName {

    ACCESSIBILITY,
    ACCESSIBILITY_BROWSER_URL,
    ACCESSIBILITY_KEYBOARD_INPUT,
    APPS_INSTALL,
    AIRPLANEMODE,
    ACCELEROMETER,
    ACTIVITY,
    BLUETOOTH,
    BOOT,
    DATA_TRAFFIC,
    DEVICE_INFO,
    ESM,
    GYROSCOPE,
    INTERNET,
    INSTALLED_APP,
    LIGHT,
    NOTIFICATION,
    PHONE_ORIENTATION,
    PHONE,
    POWER,
    PROXIMITY,
    RINGER_MODE,
    SCREEN,
    SCREEN_ORIENTATION,
    SMS,
    USAGE_EVENTS
}

enum class BootEventType {
    BOOTED,
    SHUTDOWN,
    REBOOT
}

enum class ONOFFSTATE {
    ON,
    OFF
}

enum class PowerState {
    CONNECTED,
    DISCONNECTED
}

enum class ESMQuestionType{
    ESM_UNLOCK_INTENTION,
    ESM_LOCK_Q_FINISH,
    ESM_LOCK_Q_MORE,
    ESM_LOCK_Q_TRACK_OF_TIME,
    ESM_LOCK_Q_TRACK_OF_SPACE,
    ESM_LOCK_Q_EMOTION,
    ESM_LOCK_Q_REGRET,
    ESM_LOCK_Q_AGENCY,
}

enum class ScreenState {
    ON_LOCKED,
    ON_UNLOCKED,
    OFF_UNLOCKED,
    OFF_LOCKED,
    ON_USERPRESENT,
    UNKNOWN
}

enum class NotificationInteraction {
        NOTIFICATION_POSTED,
        NOTIFICATION_REMOVED
    }

Where This only is used id WIFI is enabled
enum class WifiConnectionState {
    DISABLED,
    ENABLED,
    UNKNOWN
}

UNKNOWN if no Internetconnection exists
enum class ConnectionType {
    CONNECTED_WIFI,
    CONNECTED_MOBILE,
    CONNECTED_ETHERNET,
    CONNECTED_VPN,
    UNKNOWN
}

enum class SmsEventType {
    UNKNOWN,
    INBOX,
    SENT,
    DRAFT,
    OUTBOX
}

enum class ScreenOrientationType {
    SCREEN_ORIENTATION_PORTRAIT,
    SCREEN_ORIENTATION_LANDSCAPE,
    SCREEN_ORIENTATION_UNDEFINED
}

enum class RingerMode {
    SILENT_MODE,
    VIBRATE_MODE,
    NORMAL_MODE,
    UNKNOWN
}

enum class SensorAccuracy {
    ACCURACY_UNRELAIABLE,
    ACCURACY_ELSE
}

enum class ActivityType {
    IN_VEHICLE,
    ON_BICYCLE,
    ON_FOOT,
    RUNNING,
    STILL,
    TILTING,
    WALKING,
    UNKNOWN
}

enum class ActivityTransitionType {
    ACTIVITY_TRANSITION_ENTER,
    ACTIVITY_TRANSITION_EXIT,
    ACTIVITY_TRANSITION_UNKNOWN
}

enum class InstallEventType {
    INSTALLED,
    UPDATED,
    UNINSTALLED_AND_DATA_REMOVED,
    UNINSTALLED,
    DATA_CLEARED,
    UNKNOWN
}


ADMIN:
    RESTARTED_LOGGING
    RESTARTED_LOGGING_WORKER
    LOGOUT
    LOGIN


notification prio
IMPORTANCE_NON: 0
IMPORTANCE_MIN: 1
IMPORTANCE_LOW: 2
IMPORTANCE_DEFAULT: 3
IMPORTANCE_HIGH: 4
IMPORTANCE_MAX: 5
IMPORTANCE_UNSPECIFIED: -10000

SMSType{
 1 -> SmsEventType.INBOX
 2 -> SmsEventType.SENT
 3 -> SmsEventType.DRAFT
 4 -> SmsEventType.OUTBOX
 else -> SmsEventType.UNKNOWN
}

PHONEEvent{
RINGING
ONHOLD
  1 -> "INCOMING"
  2 -> "OUTGOING"
  3 -> "MISSED"
  4 -> "VOICEMAIL"
  5 -> "REJECTED"
  6 -> "BLOCKED"
  7 -> "ANSWERED_EXTERNALLY"
   else -> "UNKNOWN: $type"
   }

Activity{
 DetectedActivity.IN_VEHICLE
                DetectedActivity.ON_BICYCLE
                DetectedActivity.ON_FOOT
                DetectedActivity.RUNNING
                DetectedActivity.STILL
                DetectedActivity.TILTING
                DetectedActivity.WALKING
                ActivityType.UNKNOWN.name
}

usage events:
https://developer.android.com/reference/android/app/usage/UsageEvents.Event
    ACTIVITY_PAUSED
    ACTIVITY_RESUMED
    ACTIVITY_STOPPED
    CONFIGURATION_CHANGE // device configuration changes
    DEVICE_SHUTDOWN
    DEVICE_STARTUP
    FOREGROUND_SERVICE_START
    FOREGROUND_SERVICE_STOP
    KEYGUARD_HIDDEN
    KEYGUARD_SHOWN
    MOVE_TO_BACKGROUND// deprecated in API 29 by ACTIVITY_PAUSED
    MOVE_TO_FOREGROUND// deprecated in API 29 by ACTIVITY_RESUMED
    NONE
    SCREEN_INTERACTIVE
    SCREEN_NON_INTERACTIVE
    SHORTCUT_INVOCATION
    STANDBY_BUCKET_CHANGED
    USER_INTERACTION
    NOTIFICATION_INTERRUPTION 12
    NOTIFICATION_SEEN 10
    UNKNOWN

AccessibilityEvent.TYPE_ANNOUNCEMENT -> return "TYPE_ANNOUNCEMENT"
            AccessibilityEvent.TYPE_TOUCH_INTERACTION_END 
            AccessibilityEvent.TYPE_TOUCH_INTERACTION_START 
            AccessibilityEvent.TYPE_VIEW_CLICKED
            AccessibilityEvent.TYPE_VIEW_HOVER_ENTER
            AccessibilityEvent.TYPE_VIEW_HOVER_EXIT 
            AccessibilityEvent.TYPE_VIEW_LONG_CLICKED 
            AccessibilityEvent.TYPE_VIEW_SCROLLED 
            AccessibilityEvent.TYPE_VIEW_SELECTED
            AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED -> ACCESSIBILITY_KEYBOARD_INPUT
            AccessibilityEvent.TYPE_WINDOW_CONTENT_CHANGED -> ACCESSIBILITY_BROWSER_URL
            AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED -> ACCESSIBILITY_BROWSER_URL
            AccessibilityEvent.TYPE_VIEW_CONTEXT_CLICKED
            AccessibilityEvent.TYPE_WINDOWS_CHANGED 

			
enum class BluetoothDeviceType(val constant: BluetoothClassType) {
    AUDIO_VIDEO_CAMCORDER(BluetoothClass.Device.AUDIO_VIDEO_CAMCORDER),
    AUDIO_VIDEO_CAR_AUDIO(BluetoothClass.Device.AUDIO_VIDEO_CAR_AUDIO),
    AUDIO_VIDEO_HANDSFREE(BluetoothClass.Device.AUDIO_VIDEO_HANDSFREE),
    AUDIO_VIDEO_HEADPHONES(BluetoothClass.Device.AUDIO_VIDEO_HEADPHONES),
    AUDIO_VIDEO_HIFI_AUDIO(BluetoothClass.Device.AUDIO_VIDEO_HIFI_AUDIO),
    AUDIO_VIDEO_LOUDSPEAKER(BluetoothClass.Device.AUDIO_VIDEO_LOUDSPEAKER),
    AUDIO_VIDEO_MICROPHONE(BluetoothClass.Device.AUDIO_VIDEO_MICROPHONE),
    AUDIO_VIDEO_PORTABLE_AUDIO(BluetoothClass.Device.AUDIO_VIDEO_PORTABLE_AUDIO),
    AUDIO_VIDEO_SET_TOP_BOX(BluetoothClass.Device.AUDIO_VIDEO_SET_TOP_BOX),
    AUDIO_VIDEO_UNCATEGORIZED(BluetoothClass.Device.AUDIO_VIDEO_UNCATEGORIZED),
    AUDIO_VIDEO_VCR(BluetoothClass.Device.AUDIO_VIDEO_VCR),
    AUDIO_VIDEO_VIDEO_CAMERA(BluetoothClass.Device.AUDIO_VIDEO_VIDEO_CAMERA),
    AUDIO_VIDEO_VIDEO_CONFERENCING(BluetoothClass.Device.AUDIO_VIDEO_VIDEO_CONFERENCING),
    AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER(BluetoothClass.Device.AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER),
    AUDIO_VIDEO_VIDEO_GAMING_TOY(BluetoothClass.Device.AUDIO_VIDEO_VIDEO_GAMING_TOY),
    AUDIO_VIDEO_VIDEO_MONITOR(BluetoothClass.Device.AUDIO_VIDEO_VIDEO_MONITOR),
    AUDIO_VIDEO_WEARABLE_HEADSET(BluetoothClass.Device.AUDIO_VIDEO_WEARABLE_HEADSET),
    COMPUTER_DESKTOP(BluetoothClass.Device.COMPUTER_DESKTOP),
    COMPUTER_HANDHELD_PC_PDA(BluetoothClass.Device.COMPUTER_HANDHELD_PC_PDA),
    COMPUTER_LAPTOP(BluetoothClass.Device.COMPUTER_LAPTOP),
    COMPUTER_PALM_SIZE_PC_PDA(BluetoothClass.Device.COMPUTER_PALM_SIZE_PC_PDA),
    COMPUTER_SERVER(BluetoothClass.Device.COMPUTER_SERVER),
    COMPUTER_UNCATEGORIZED(BluetoothClass.Device.COMPUTER_UNCATEGORIZED),
    COMPUTER_WEARABLE(BluetoothClass.Device.COMPUTER_WEARABLE),
    HEALTH_BLOOD_PRESSURE(BluetoothClass.Device.HEALTH_BLOOD_PRESSURE),
    HEALTH_DATA_DISPLAY(BluetoothClass.Device.HEALTH_DATA_DISPLAY),
    HEALTH_GLUCOSE(BluetoothClass.Device.HEALTH_GLUCOSE),
    HEALTH_PULSE_OXIMETER(BluetoothClass.Device.HEALTH_PULSE_OXIMETER),
    HEALTH_PULSE_RATE(BluetoothClass.Device.HEALTH_PULSE_RATE),
    HEALTH_THERMOMETER(BluetoothClass.Device.HEALTH_THERMOMETER),
    HEALTH_UNCATEGORIZED(BluetoothClass.Device.HEALTH_UNCATEGORIZED),
    HEALTH_WEIGHING(BluetoothClass.Device.HEALTH_WEIGHING),
    PHONE_CELLULAR(BluetoothClass.Device.PHONE_CELLULAR),
    PHONE_CORDLESS(BluetoothClass.Device.PHONE_CORDLESS),
    PHONE_ISDN(BluetoothClass.Device.PHONE_ISDN),
    PHONE_MODEM_OR_GATEWAY(BluetoothClass.Device.PHONE_MODEM_OR_GATEWAY),
    PHONE_SMART(BluetoothClass.Device.PHONE_SMART),
    PHONE_UNCATEGORIZED(BluetoothClass.Device.PHONE_UNCATEGORIZED),
    TOY_CONTROLLER(BluetoothClass.Device.TOY_CONTROLLER),
    TOY_DOLL_ACTION_FIGURE(BluetoothClass.Device.TOY_DOLL_ACTION_FIGURE),
    TOY_GAME(BluetoothClass.Device.TOY_GAME),
    TOY_ROBOT(BluetoothClass.Device.TOY_ROBOT),
    TOY_UNCATEGORIZED(BluetoothClass.Device.TOY_UNCATEGORIZED),
    TOY_VEHICLE(BluetoothClass.Device.TOY_VEHICLE),
    WEARABLE_GLASSES(BluetoothClass.Device.WEARABLE_GLASSES),
    WEARABLE_HELMET(BluetoothClass.Device.WEARABLE_HELMET),
    WEARABLE_JACKET(BluetoothClass.Device.WEARABLE_JACKET),
    WEARABLE_PAGER(BluetoothClass.Device.WEARABLE_PAGER),
    WEARABLE_UNCATEGORIZED(BluetoothClass.Device.WEARABLE_UNCATEGORIZED),
    WEARABLE_WRIST_WATCH(BluetoothClass.Device.WEARABLE_WRIST_WATCH),  //Major Bluetooth Components
    AUDIO_VIDEO(BluetoothClass.Device.Major.AUDIO_VIDEO),
    COMPUTER(BluetoothClass.Device.Major.COMPUTER),
    HEALTH(BluetoothClass.Device.Major.HEALTH),
    IMAGING(BluetoothClass.Device.Major.IMAGING),
    MISC(BluetoothClass.Device.Major.MISC),
    NETWORKING(BluetoothClass.Device.Major.NETWORKING),
    PERIPHERAL(BluetoothClass.Device.Major.PERIPHERAL),
    PHONE(BluetoothClass.Device.Major.PHONE),
    TOY(BluetoothClass.Device.Major.TOY),
    UNCATEGORIZED(BluetoothClass.Device.Major.UNCATEGORIZED),
    WEARABLE(BluetoothClass.Device.Major.WEARABLE),
    UNKNOWN(-1);
			
			

questionnaire
demografie:

1: Still in school
2: Finished school with no qualifications
6: Less than Highschool
7: High school diploma (GED, Abtitur or equivalent)
8: University Bacherlor`s degree
10: University Master`s degree
11: PHD or higher
9: OtOther school-leaving qualification:



gender:
1: female
2: male
3: non-binary
4: Prefer not to disclose
5: Other
			


CASE	SERIAL	REF	QUESTNNR	MODE	STARTED	SD01	SD02_01	SD10	SD10_09	SD14	D001	D001_01	TI01_01	TI01_02	TI01_03	TI01_04	TI01_05	TI04_01	TI04_02	TI02	TI03	TI03_03	TR01_01	TR03_01	TR04_01	TR02_01	AB01_09	AB01_10	AB01_12	AB01_13	AB01_11	AB01_01	AB01_02	AB01_03	AB01_04	AB01_05	AB01_06	AB01_07	AB01_08	AB02_01	AB02_02	AB02_03	AB02_04	AB02_05	AB02_06	AB02_07	AB02_08	AB02_09	AB02_10	IM01_01	IM02_01	IM06_01	TIME001	TIME002	TIME003	TIME004	TIME005	TIME006	TIME007	TIME_SUM	MAILSENT	LASTDATA	FINISHED	Q_VIEWER	LASTPAGE	MAXPAGE	MISSING	MISSREL	TIME_RSI	DEG_TIME
Interview number (ongoing)	Serial number (if provided)	Reference (if provided in link)	Questionnaire that has been used in the interview	Interview mode	Time the interview has started (Europe/Berlin)	Geschlecht	Alter (direkt): I am ... years old	Formale Bildung	Formale Bildung: Other school-leaving qualification	Beschäftigung	Consent: Residual option (negative) or number of selected options	Consent: I Consent	influence: The Rabbit hole tracker application influenced my usual mobile phone interactions.	influence: Because of the rabbit hole tracker, I used my phone more than I usually do.	influence: Because of the rabbit hole tracker, I was more aware of my phone usage.	influence: Because of the rabbit hole tracker, I reduced my mobile phone usage time.	influence: The experience samplings / short questionnaires were shown to frequently.	esm: I answered the experience samplings / short questionnaires correctly.	esm: The expereince sampling / short questionnaires annoyed me so much so that I just speeded through.	Wlan	Mobile	Mobile: Other places	Trigger: [01]	Trigger Time: [01]	Trigger Context: [01]	Additional: [01]	Absentminded use: How often do you wind up using your phone for longer than you intended to?	Absentminded use: How often do you lose track of time while using your phone?	Absentminded use: How often do you regret part of your phone use?	Absentminded use: How often do you feel that you did not have agency in your phone use?	Absentminded use: How often do you lose track of your souroundings while using your phone?	Absentminded use: How often do you open your phone to do one thing and wind up doing something else without realizing it?	Absentminded use: How often do you check your phone while interacting with other people (i.e. during conversation)?	Absentminded use: How often do you find yourself checking your phone “for no good reason”?	Absentminded use: How often do you automatically check your phone without a purpose?	Absentminded use: How often do you check your phone out of habit?	Absentminded use: How often do you find yourself checking your phone without realizing why you did it?	Absentminded use: How often have you realized you checked your phone only after you have already been using it?	Absentminded use: How often do you find yourself using your phone absent-mindedly?	General use: How often do you have your cellphone on your person?	General use: How frequently do you send and receive text messages or emails?	General use: To what extent do you have push notifications enabled on your phone?	General use: How often do you find yourself checking your phone for new events such as text messages or emails?	General use: How often do you use the phone for reading the news or browsing the web?	General use: How often do you use sound notifications on your phone?	General use: When you get a notification on your phone, how often do you check it immediately?	General use: How often do you use the calendar (or similar productivity apps?)	General use: How often do you check social media apps such as snapchat, facebook, or twitter?	General use: How often do you use your phone for entertainment purposes (i.e. apps and games)?	Study ID: [01]	Compensation mail: [01]	Wlan name: [01]	Time spent on page 1	Time spent on page 2	Time spent on page 3	Time spent on page 4	Time spent on page 5	Time spent on page 6	Time spent on page 7	Time spent overall (except outliers)	Time when the invitation mailing was sent (personally identifiable recipients, only)	Time when the data was most recently updated	Has the interview been finished (reached last page)?	Did the respondent only view the questionnaire, omitting mandatory questions?	Last page that the participant has handled in the questionnaire	Hindmost page handled by the participant	Missing answers in percent	Missing answers (weighted by relevance)	Degradation points for being very fast	Degradation points for being very fast


SD01 geschlecht
SD02_01 alter
SD10 bildung
SD10_09 bildung extra
SD14 beschaeftigung
